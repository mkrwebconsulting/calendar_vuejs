{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CalendarEvent = _resolveComponent(\"CalendarEvent\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"card border-start\", $options.cardClasses])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"card-header text-center\", $options.cardHeaderClasses]),\n    role: \"button\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.setActiveDay())\n  }, [_createElementVNode(\"strong\", null, _toDisplayString($props.day.fullName), 1\n  /* TEXT */\n  )], 2\n  /* CLASS */\n  ), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.day.events, event => {\n    return _openBlock(), _createBlock(_component_CalendarEvent, {\n      key: event.title,\n      event: event,\n      day: $props.day\n    }, {\n      eventPriority: _withCtx(slotProps => [_createTextVNode(_toDisplayString(slotProps.priorityDisplayName), 1\n      /* TEXT */\n      )]),\n      default: _withCtx(_ref => {\n        let {\n          event: entry\n        } = _ref;\n        return [_createElementVNode(\"b\", null, _toDisplayString(entry.title), 1\n        /* TEXT */\n        )];\n      }),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"event\", \"day\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;EAUSA,KAAK,EAAC;;;;;uBATbC,oBAwBM,KAxBN,EAwBM;IAxBDD,KAAK,mBAAC,mBAAD,EAA6BE,oBAA7B;EAwBJ,CAxBN,GACEC,oBAOM,KAPN,EAOM;IANJH,KAAK,mBAAC,yBAAD,EACGE,0BADH,EAMD;IAJJE,IAAI,EAAC,QAID;IAHHC,OAAK,sCAAEH,uBAAF;EAGF,CAPN,GAMEC,oBAAmC,QAAnC,EAAmC,IAAnC,EAAmCG,iBAAxBC,WAAIC,QAAoB,CAAnC,EAAuB;EAAA;EAAvB,EANF;;EAAA,GAQAL,oBAcM,KAdN,cAcM,oBAbJF,oBAYgBQ,SAZhB,EAYgB,IAZhB,EAYgBC,YAXEH,WAAII,MAWN,EAXPC,KAAmB,IAAd;yBADdC,aAYgBC,wBAZhB,EAYgB;MAVbC,GAAG,EAAEH,KAAK,CAACI,KAUE;MATbJ,KAAK,EAAEA,KASM;MARbK,GAAG,EAAEV;IAQQ,CAZhB;MAMaW,aAAa,WAAEC,SACxB,IADiC,mCAC9BA,SAAS,CAACC,sBAAmB;MAAA;OADC,CAAX;MAGbC,OAAO,WACf;QAAA,IAAwB;UAAAT,OADEU;QACF,CAAxB;QAAA,OAD+B,CAC/BnB,oBAAwB,GAAxB,EAAwB,IAAxB,EAAwBG,iBAAlBgB,KAAK,CAACN,KAAY,CAAxB,EAAiB;QAAA;QAAjB,CAD+B,CAC/B;MAAA,CADe;;;;KATpB;;IAAA;GAYgB,CAZhB;;EAAA,CAaI,EAdN,EATF;;EAAA","names":["class","_createElementBlock","$options","_createElementVNode","role","onClick","_toDisplayString","$props","fullName","_Fragment","_renderList","events","event","_createBlock","_component_CalendarEvent","key","title","day","eventPriority","slotProps","priorityDisplayName","default","entry"],"sourceRoot":"","sources":["/Users/isaak/Desktop/vuejs_udemy_deutsch/terminkalender/src/components/CalendarDay.vue"],"sourcesContent":["<template>\n  <div class=\"card border-start\" :class=\"cardClasses\">\n    <div\n      class=\"card-header text-center\"\n      :class=\"cardHeaderClasses\"\n      role=\"button\"\n      @click=\"setActiveDay()\"\n    >\n      <strong>{{ day.fullName }}</strong>\n    </div>\n    <div class=\"card-body\">\n      <CalendarEvent\n        v-for=\"event in day.events\"\n        :key=\"event.title\"\n        :event=\"event\"\n        :day=\"day\"\n      >\n        <template #eventPriority=\"slotProps\">\n          {{ slotProps.priorityDisplayName }}</template\n        >\n        <template #default=\"{ event: entry }\"\n          ><b>{{ entry.title }}</b>\n        </template>\n      </CalendarEvent>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CalendarEvent from \"./CalendarEvent\";\nimport Store from \"../store\";\n\nexport default {\n  name: \"CalendarDay\",\n  components: {\n    CalendarEvent,\n  },\n\n  props: {\n    day: {\n      type: Object,\n      required: true,\n      default: function () {\n        return {\n          id: -1,\n          fullName: \"Fehlender Wochentag\",\n          events: [],\n        };\n      },\n      validator: function (value) {\n        if (Object.keys(value).includes(\"id\")) {\n          return true;\n        }\n      },\n    },\n  },\n\n  computed: {\n    cardClasses() {\n      return this.day.id === Store.getters.activeDay().id\n        ? [\"border-primary\"]\n        : null;\n    },\n    cardHeaderClasses() {\n      return this.day.id === Store.getters.activeDay().id\n        ? [\"bg-primary\", \"text-white\"]\n        : null;\n    },\n  },\n  methods: {\n    setActiveDay() {\n      Store.mutations.setActiveDay(this.day.id);\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module"}